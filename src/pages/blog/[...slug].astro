---
import { getCollection } from 'astro:content';
import Header from '../../components/Header.astro';
import Sidebar from '../../components/Sidebar.astro';
import ScrollToTop from '../../components/ScrollToTop.astro';
import "../../styles/global.css";
import { getEntryBySlug } from 'astro:content';
import LinkCard from '../../components/LinkCard.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();

const content = post.body;

// 정규식으로 http/https 링크 추출
const urlRegex = /(https?:\/\/[^\s]+)/g;
const links = content.match(urlRegex) || [];
---

<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{post.data.title} - DevLog</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Pacifico&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.6.0/remixicon.min.css">
  <style>
    :where([class^="ri-"])::before {
      content: "\f3c2";
    }
  </style>
</head>
<body class="bg-gray-50 text-primary">
  <Header />
  
  <main class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <article class="bg-white rounded-lg shadow-sm border border-gray-200 p-8">
      <header class="mb-8">
        <div class="flex items-center gap-2 mb-4">
          {post.data.tags.map(tag => <span class="px-2 py-1 bg-gray-100 text-xs rounded text-secondary">{tag}</span>)}
        </div>
        <h1 class="text-3xl font-bold mb-4 text-primary">{post.data.title}</h1>
        <div class="flex items-center justify-between text-sm text-secondary">
          <span>{post.data.pubDate}</span>
          <div class="flex items-center gap-3">
            <span class="flex items-center gap-1">
              <i class="ri-eye-line"></i>
              {post.data.views}
            </span>
            <span class="flex items-center gap-1">
              <i class="ri-heart-line"></i>
              {post.data.likes}
            </span>
          </div>
        </div>
      </header>
      
      {/* {links.length > 0 && (
        <div class="flex flex-wrap gap-2 my-4">
          {links.map(link => (
            <a
              href={link}
              target="_blank"
              rel="noopener noreferrer"
              class="inline-flex items-center gap-1 px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-xs font-semibold hover:bg-blue-200 transition"
            >
              <i class="ri-external-link-line"></i>
              {link}
            </a>
          ))}
        </div>
      )} */}

      <div class="prose prose-lg max-w-none">
        <Content components={{ LinkCard }} />
      </div>
    </article>
  </main>
  
  <ScrollToTop />
</body>
</html> 